---
- name: Ensure tools dir exists.
  file:
    path: "{{ tools_dir }}"
    state: directory
  become: True
  become_user: "{{ appuser }}"

- name: Get the path from link
  command: readlink {{ java_dir_link }}
  register: link_output
  when: from_scratch
  ignore_errors: True

- name: Remove Java folder in order to recreate
  file:
    path: "{{ link_output.stdout }}"
    state: absent
  when: from_scratch
  become: True

- name: Ensure java dir exists.
  file:
    path: "{{ java_dir }}"
    state: directory
  become: True
  become_user: "{{ appuser }}"    

- name: Unpack java artifact.
  unarchive:
    src: "{{ download_dir }}/{{ java_artifact }}"
    dest: "{{ download_dir }}/"
    remote_src: True
    list_files: yes
  register: unpack_out
  become: True
  become_user: "{{ appuser }}"

- name: "Move java to the {{ java_dir }}"
  shell: "{{ item }}"
  args:
    chdir: "{{ download_dir }}"
  with_items:
    - "mv {{ download_dir }}/{{ unpack_out.files[0] }}* {{ java_dir }}/"
    - "rm -rf {{ download_dir }}/{{ unpack_out.files[0] }}"
  when: java_dir|length > 5
  become: True
  become_user: "{{ appuser }}"

- name: Create a simlink to the current verion of java folder
  file:
    src: "{{ java_dir }}"
    path: "{{ java_dir_link }}"
    state: link
    force: yes
  become: True
  become_user: "{{ appuser }}"

- name: Remove JAVA_HOME and PATH from ~/.bashrc
  lineinfile:
    path: ~/.bashrc
    regexp: "{{ item }}"
    state: absent
  with_items:
    - "^export JAVA_HOME"
    - "^export PATH"
  when: add_user_env_vars
  become: True
  become_user: "{{ appuser }}"


- name: Add JAVA_HOME to PATH
  lineinfile:
    path: ~/.bashrc
    line: "{{ item }}"
  with_items:
    - "export JAVA_HOME={{ java_dir_link }}"
    - "export PATH=$PATH:{{ java_dir_link }}/bin"
  when: add_user_env_vars
  become: True
  become_user: "{{ appuser }}"
