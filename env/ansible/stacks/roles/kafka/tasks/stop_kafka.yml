- name: Check if Kafka shell script exists in expected location
  stat:
    path: "{{ kafka_dir }}/bin/{{ kafka_stop_script_name }}"
  register:  script 

# - name: Check if kafka is running using native means
#   shell: "echo dump | nc localhost {{ listener_port }} | grep brokers | grep /brokers/ids/$(grep broker.id {{ kafka_serverProperties }} | cut -d '=' -f2) > /dev/null && echo RUNNING || echo STOPPED"
#   environment:
#     JAVA_HOME: "{{ java_dir_link }}"
#     PATH: "{{ lookup('env', 'PATH') }}:{{ java_dir }}/bin"    
#   when: script.stat.exists  
#   register: service_check  

- name: Check if kafka is running using OS tools
  shell: "ps -ef | grep $(netstat -pln 2> /dev/null | grep {{ listener_port }} | sed -nE 's|.* ([0-9]+)\\/\\w+|\\1|p') 2>/dev/null | grep -v grep > /dev/null && echo RUNNING || echo STOPPED"
#  when: not script.stat.exists
  register: service_check

- name: Stop Kafka
  command: "./{{ kafka_stop_script_name }}"
  args:
    chdir: "{{ kafka_dir }}/bin/"
  environment:
    JAVA_HOME: "{{ java_dir }}"
    PATH: "{{ lookup('env', 'PATH') }}:{{ java_dir }}/bin"  
  when:
    - script.stat.exists  
    - service_check.stdout == 'RUNNING'

- name: "Stop Kafka forced (the process which owns {{ listener_port }} port)"
  shell: "kill -9 $(netstat -pln 2> /dev/null | grep {{ listener_port }} | sed -nE 's|.* ([0-9]+)\\/\\w+|\\1|p')"
  when:
    - not script.stat.exists or from_scratch
    - service_check.stdout == 'RUNNING'

- name: Wait for the Kafka listener port to become unavailable
  wait_for:
    port: "{{ listener_port }}"
    state: stopped
    delay: 3
    timeout: 120
    sleep: 5
    connect_timeout: 10